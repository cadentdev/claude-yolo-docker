#!/bin/bash

# Get host user info
USERID=$(id -u) GROUPID=$(id -g) USERNAME=$(whoami) MOUNTDIR=$(pwd) 
SCRIPT_DIR="$(cd "$(dirname "$0")" && pwd)" CLAUDE_DIR="$HOME/.claude"

# Verify credentials exist on host before starting
if [ ! -f "$CLAUDE_DIR/.credentials.json" ]; then echo "Error: No Claude 
  credentials found at $CLAUDE_DIR/.credentials.json" echo "Please run 'claude 
  login' on your host machine first." exit 1
fi

# Build the image if it doesn't exist
if [[ "$(docker images -q claude-yolo:latest 2> /dev/null)" == "" ]]; then echo 
  "Building Docker image (first run only)..." if ! docker build -t 
  claude-yolo:latest "$SCRIPT_DIR"; then
    echo "Error: Docker build failed. Please check the error messages above." 
    exit 1
  fi echo "Build complete!"
fi

# Run the container
docker run \ -v "$MOUNTDIR":/workspace \ -v "$CLAUDE_DIR":/tmp/.claude-host:ro 
  \ -it \ --rm \ claude-yolo:latest \ /bin/bash -c "
    # Find if a user with our UID already exists
    EXISTING_USER=\$(getent passwd $USERID | cut -d: -f1)
    
    if [ -n \"\$EXISTING_USER\" ]; then CONTAINER_USER=\$EXISTING_USER
    else
      CONTAINER_USER=$USERNAME groupadd -g $GROUPID \$CONTAINER_USER 
      2>/dev/null || true useradd -u $USERID -g $GROUPID -m -s /bin/bash 
      \$CONTAINER_USER
    fi
    
    # Copy credentials to container user's home
    mkdir -p /home/\$CONTAINER_USER/.claude cp -r /tmp/.claude-host/. 
    /home/\$CONTAINER_USER/.claude/ chown -R $USERID:$GROUPID 
    /home/\$CONTAINER_USER/.claude

    # Display setup information
    echo \"═══════════════════════════════════════════════════════════════\" 
    echo \"Container Setup Complete\" echo 
    \"═══════════════════════════════════════════════════════════════\" echo 
    \"Container user: \$CONTAINER_USER\" echo \"UID:GID: $USERID:$GROUPID\" 
    echo \"Working directory: $MOUNTDIR\" echo \" → mounted at /workspace\" 
    echo \"\" echo \"Credentials: $(ls -1 /tmp/.claude-host | wc -l) files 
    mounted from host\"
    
    # Verify critical credential file
    if [ -f /home/\$CONTAINER_USER/.claude/.credentials.json ]; then echo \" ✓ 
      .credentials.json copied successfully\"
    else echo \" ✗ WARNING: .credentials.json not found\"
    fi
    
    echo \"═══════════════════════════════════════════════════════════════\" 
    echo \"\" echo \"Press Enter to start Claude Code with 
    --dangerously-skip-permissions\" read

    # Run claude as the determined user, then drop to shell for debugging
    su - \$CONTAINER_USER -c '
      cd /workspace
      claude --dangerously-skip-permissions
      echo \"\"
      echo \"═══════════════════════════════════════════════════════════════\"
      echo \"Claude exited. You are still in the container for debugging.\"
      echo \"Try: ls -la ~/.claude\"
      echo \"Type exit to leave the container.\"
      echo \"═══════════════════════════════════════════════════════════════\"
      exec bash
    '      
"

