#!/bin/bash

# Get host user info
USERID=$(id -u)
GROUPID=$(id -g)
USERNAME=$(whoami)
MOUNTDIR=$(pwd)
SCRIPT_DIR="$(cd "$(dirname "$0")" && pwd)"

# Build the image if it doesn't exist
if [[ "$(docker images -q claude-yolo:latest 2> /dev/null)" == "" ]]; then
  echo "Building Docker image (first run only)..."
  if ! docker build -t claude-yolo:latest "$SCRIPT_DIR"; then
    echo "Error: Docker build failed. Please check the error messages above."
    exit 1
  fi
  echo "Build complete!"
fi

# Run the container
docker run \
  -v "$MOUNTDIR":/workspace \
  -v "$HOME"/.claude:/tmp/.claude-host:ro \
  -it \
  --rm \
  claude-yolo:latest \
  /bin/bash -c "
    # Find if a user with our UID already exists
    EXISTING_USER=\$(getent passwd $USERID | cut -d: -f1)
    
    if [ -n \"\$EXISTING_USER\" ]; then
      # User with our UID exists, use it
      CONTAINER_USER=\$EXISTING_USER
      echo \"Using existing user: \$CONTAINER_USER (UID: $USERID)\"
    else
      # No user with our UID, create one
      CONTAINER_USER=$USERNAME
      groupadd -g $GROUPID $USERNAME 2>/dev/null || true
      useradd -u $USERID -g $GROUPID -m -s /bin/bash $USERNAME
      echo \"Created new user: \$CONTAINER_USER (UID: $USERID)\"
    fi
    
    # Set up credentials for whichever user we're using
    mkdir -p /home/\$CONTAINER_USER/.claude
    cp -r /tmp/.claude-host/* /home/\$CONTAINER_USER/.claude/ 2>/dev/null || true
    chown -R \$CONTAINER_USER /home/\$CONTAINER_USER/.claude

    # Show credential status
    if [ -f /home/\$CONTAINER_USER/.claude/.credentials.json ]; then
      echo \"✓ Credentials found\"
    else
      echo \"✗ WARNING: No credentials found - you may need to authenticate\"
    fi
    
    echo \"\"
    echo \"Press Enter to start Claude Code...\"
    read
      
    # Run claude as the determined user
    su - \$CONTAINER_USER -c 'cd /workspace && claude --dangerously-skip-permissions'
  "
